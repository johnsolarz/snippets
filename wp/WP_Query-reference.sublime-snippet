<snippet>
  <content><![CDATA[
<?php
// For creating multiple, customized loops.
// http://codex.wordpress.org/Class_Reference/WP_Query

// Parameters
\$args = array(

  // Author Parameters
  'author'              => '123', // use author id.
  'author_name'         => 'rami', // use 'user_nicename' (NOT name).
  'author__in'          => array(2,6), // use author id.
  'author__not_in'      => array(2,6), // use author id.

  // Category Parameters
  'cat'                 => '4', // use category id.
  'category_name'       => 'staff', // use category slug (NOT name).
  'category__and'       => array(), // use category slug (NOT name).
  'category__in'        => array(), // use category id.
  'category__not_in'    => array(), // use category id.

  // Tag Parameters
  'tag'                 => 'cooking', // use tag slug.
  'tag_id'              => '13', // use tag id.
  'tag__and'            => array(), // use tag ids.
  'tag__in'             => array(), // use tag ids.
  'tag__not_in'         => array(), // use tag ids.
  'tag_slug__and'       => array(), // use tag slugs.
  'tag_slug__in'        => array(), // use tag slugs.

  // Taxonomy Parameters
  'tax_query'           => array(  // use taxonomy parameters.
    array(
      'taxonomy'         => 'people', // Taxonomy.
      'field'            => 'slug', // Select taxonomy term by ('id' or 'slug').
      'terms'            => 'bob', // Taxonomy term(s).
      'include_children' => true, // Whether or not to include children for hierarchical taxonomies.
      'operator'         => (NOT IN) // Operator to test ('IN', 'NOT IN', 'AND').
    )
  ),

  // Post & Page Parameters
  'p'                   => '7', // use post id.
  'name'                => 'about', // use post slug.
  'page_id'             => '7', // use page id.
  'pagename'            => 'contact', // use page slug.
  'post_parent'         => '93', // use page id. Return just the child Pages.
  'post_parent__in'     => array(), // use post ids. Specify posts whose parent is in an array. NOTE: Introduced in 3.6 http://core.trac.wordpress.org/ticket/11056
  'post_parent__not_in' => array(), // use post ids. Specify posts whose parent is not in an array.
  'post__in'            => array(), // use post ids. Specify posts to retrieve. ATTENTION If you use sticky posts, they will be included (prepended!) in the posts you retrieve whether you want it or not. To suppress this behaviour use ignore_sticky_posts
  'post__not_in'        => array(), // use post ids. Specify post NOT to retrieve.

  // Type Parameters
  'post_type'           => 'page', // use post types. Retrieves posts by Post Types, default value is 'post'. If 'tax_query' is set for a query, the default value becomes 'any'.

  // Status Parameters
  'post_status'         => 'draft', // use post status. Retrieves posts by Post Status. Default value is 'publish', but if the user is logged in, 'private' is added. And if the query is run in an admin context (administration area or AJAX call), protected statuses are added too. By default protected statuses are 'future', 'draft' and 'pending'.

  // Pagination Parameters
  'nopaging'               => true, // show all posts or use pagination. Default value is 'false', use paging.
  'posts_per_page'         => '-1', // number of post to show per page (available with Version 2.1, replaced showposts parameter). Use 'posts_per_page'=>-1 to show all posts. Set the 'paged' parameter if pagination is off after using this parameter. Note: if the query is in a feed, wordpress overwrites this parameter with the stored 'posts_per_rss' option. To reimpose the limit, try using the 'post_limits' filter, or filter 'pre_option_posts_per_rss' and return -1
  'posts_per_archive_page' => '-1', // number of posts to show per page - on archive pages only. Over-rides posts_per_page and showposts on pages where is_archive() or is_search() would be true.
  'offset'                 => '3', // number of post to displace or pass over. Warning: Setting the offset parameter overrides/ignores the paged parameter and breaks pagination (Click here for a workaround).
  'paged'                  => '6', // number of page. Show the posts that would normally show up just on page X when using the "Older Entries" link.
  'page'                   => '3', // number of page for a static front page. Show the posts that would normally show up just on page X of a Static Front Page.
  'ignore_sticky_posts'    => false, // ignore sticky posts or not (available with Version 3.1, replaced caller_get_posts parameter). Default value is 0 - don't ignore sticky posts. Note: ignore/exclude sticky posts being included at the beginning of posts returned, but the sticky post will still be returned in the natural order of that list of posts returned.

  // Order & Orderby Parameters
  'order'               => 'DESC', // Designates the ascending or descending order of the 'orderby' parameter ( 'ASC' or 'DESC').
  'orderby'             => 'title', // Sort retrieved posts by parameter. Defaults to 'date'. One or more options can be passed.

  // Date Parameters
  'year'                => '2013' // 4 digit year (e.g. 2011).
  'monthnum'            => '12' // Month number (from 1 to 12).
  'w'                   => '1' // Week of the year (from 0 to 53). Uses MySQL WEEK command. The mode is dependent on the "start_of_week" option.
  'day'                 => '2' // Day of the month (from 1 to 31).
  'hour'                => '3' // Hour (from 0 to 23).
  'minute'              => '4' // Minute (from 0 to 60).
  'second'              => '5' // Second (0 to 60).
  'm'                   => '201307' // YearMonth (For e.g.: 201307).

  // Custom Field Parameters
  'meta_key'            => 'color' // Custom field key.
  'meta_value'          => 'blue' // Custom field value.
  'meta_value_num'      => '22' // Custom field value.
  'meta_compare'        => '!=' // Operator to test the 'meta_value'. Possible values are '!=', '>', '>=', '<', or '<='. Default value is '='.

);

// Results
\$the_query = new WP_Query( \$args );

// The loop
while(\$the_query->have_posts()) : \$the_query->the_post(); ?>

  <?php // the_content(); ?>

<?php endwhile; ?>

<?php wp_reset_postdata(); // reset the query ?>
]]></content>
  <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
  <tabTrigger>wp</tabTrigger>
  <!-- Optional: Set a scope to limit where the snippet will trigger -->
  <!-- <scope>source.python</scope> -->
</snippet>
